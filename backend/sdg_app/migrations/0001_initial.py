# Generated by Django 4.2.7 on 2025-06-10 22:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(db_column='City_ID', primary_key=True, serialize=False)),
                ('city_name', models.CharField(db_column='City_Name', max_length=100)),
                ('province', models.CharField(db_column='Province', max_length=100)),
                ('urbanization_level', models.CharField(db_column='Urbanization_level', max_length=100)),
            ],
            options={
                'db_table': 'CITY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDG1',
            fields=[
                ('poverty_id', models.AutoField(db_column='Poverty_ID', primary_key=True, serialize=False)),
                ('income_level', models.FloatField(db_column='Income_level')),
                ('access_to_education', models.BooleanField(db_column='Access_to_education')),
                ('social_protection', models.BooleanField(db_column='Social_Protection')),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'SDG_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDG11',
            fields=[
                ('postal_code', models.CharField(db_column='Postal_Code', max_length=20, primary_key=True, serialize=False)),
                ('air_quality_index', models.IntegerField(db_column='Air_Quality_Index')),
                ('transport_access', models.FloatField(db_column='Transport_Access')),
                ('infrastructure_score', models.TextField(db_column='Infrastructure_Score')),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'SDG_11',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDG2',
            fields=[
                ('hunger_id', models.AutoField(db_column='Hunger_ID', primary_key=True, serialize=False)),
                ('malnutrition_rate', models.FloatField(db_column='Malnutrition_rate')),
                ('food_insecurity', models.FloatField(db_column='Food_Insecurity')),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'SDG_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDG3',
            fields=[
                ('health_id', models.AutoField(db_column='Health_ID', primary_key=True, serialize=False)),
                ('access_of_health_care', models.FloatField(db_column='Access_of_Health_care')),
                ('maternal_mortality', models.FloatField(db_column='Maternal_Mortality')),
                ('vaccination_coverage', models.BooleanField(db_column='Vaccination_Coverage')),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'SDG_3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDG4',
            fields=[
                ('education_id', models.AutoField(db_column='Education_ID', primary_key=True, serialize=False)),
                ('literacy_rate', models.FloatField(db_column='Literacy_Rate')),
                ('school_enrollment', models.FloatField(db_column='School_Enrollment')),
                ('ict_access', models.BooleanField(db_column='ICT_Access')),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'SDG_4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDG6',
            fields=[
                ('water_id', models.AutoField(db_column='Water_ID', primary_key=True, serialize=False)),
                ('health_id', models.IntegerField(db_column='Health_ID')),
                ('acess_to_clean_water', models.FloatField(db_column='Acess_to_clean_Water')),
                ('sanitation_coverage', models.FloatField(db_column='Sanitation_Coverage')),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'SDG_6',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDG7',
            fields=[
                ('energy_id', models.AutoField(db_column='Energy_ID', primary_key=True, serialize=False)),
                ('electricity_access', models.FloatField(db_column='Electricity_Access')),
                ('clean_fuel_use', models.FloatField(db_column='Clean_Fuel_Use')),
                ('renewable_energy_share', models.FloatField(db_column='Renewable_Energy_Share')),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'SDG_7',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SDGInfo',
            fields=[
                ('sdg_id', models.IntegerField(db_column='SDG_ID', primary_key=True, serialize=False)),
                ('sdg_name', models.CharField(db_column='SDG_NAME', max_length=100)),
                ('description', models.TextField(db_column='DESCRIPTION')),
            ],
            options={
                'db_table': 'SDG_INFO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_type', models.CharField(choices=[('SELECT', 'Select'), ('INSERT', 'Insert'), ('UPDATE', 'Update'), ('DELETE', 'Delete')], max_length=20)),
                ('table_name', models.CharField(max_length=100)),
                ('sql_query', models.TextField()),
                ('affected_rows', models.IntegerField(default=0)),
                ('execution_time', models.FloatField(help_text='Execution time in seconds')),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
